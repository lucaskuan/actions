name: Test and deploy

on:
  push:
  pull_request:
    branches: [ master ]
    types: [opened, closed, reopened, synchronize]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  test:
    if: github.event.action != 'closed' 
    runs-on: ubuntu-latest
    steps:
      - run: echo Testing....
      - run: echo something after failed

  build:
    if: github.event.action != 'closed' 
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Run a one-line script
      run: echo Hello, world!
    # - name: Run a multi-line script
      # run: sh ./new_commit.sh

  deploy:
    needs: [test, build]
    if: github.event_name == 'pull_request' && (github.event.action == 'opened' || github.event.action == 'reopened')
    runs-on: ubuntu-latest
    env:
      AWS_DEFAULT_REGION: "us-west-2"
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    steps:
    - uses: actions/checkout@v2
    - name: AWS CLI
      run: |
        curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
        unzip awscliv2.zip
        sudo ./aws/install
    - name: check cli version
      run: git rev-parse --short HEAD
    - name: Calculate priority
      run: |
        export NUM=$(echo $(git rev-list --count HEAD) % 200 | bc)
        echo "::set-env name=PRIORITY::$NUM"
    # - run: sh ./prepare_cfn.sh
    # - run: cat cfn.yml
    - name: Create PR ECS stack
      run: aws cloudformation create-stack --stack-name test-pr-ecs-$(git rev-parse --short HEAD) --template-body file://cfn.yml --parameters ParameterKey=GitSHA,ParameterValue=$(git rev-parse --short HEAD) ParameterKey=ListenerRulePriority,ParameterValue=${{env.PRIORITY}}

  redeploy:
    needs: [test, build]
    if: github.event_name == 'pull_request' && github.event.action == 'synchronize'
    runs-on: ubuntu-latest
    env:
      AWS_DEFAULT_REGION: "us-west-2"
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    steps:
    - uses: actions/checkout@v2
    - name: AWS CLI
      run: |
        curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
        unzip awscliv2.zip
        sudo ./aws/install
    - name: Reload ECS service
      run: git rev-parse --short HEAD
    - run: |
        export NUM=$(echo $(git rev-list --count HEAD) % 200 | bc)
        echo "::set-env name=NUMA::$NUM"
    - run: echo ${{env.NUMA}}
  
  teardown:
    if: github.event_name == 'pull_request' && github.event.action == 'closed' 
    runs-on: ubuntu-latest
    env:
      AWS_DEFAULT_REGION: "us-west-2"
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    steps:
    - uses: actions/checkout@v2
    - name: AWS CLI
      run: |
        curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
        unzip awscliv2.zip
        sudo ./aws/install
    - run: echo test-pr-ecs-$(git rev-parse --short HEAD)
    - name: Remove PR ECS stack
      run: aws cloudformation delete-stack --stack-name test-pr-ecs-$(git rev-parse --short HEAD)